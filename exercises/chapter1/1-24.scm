;;; Soros Liu
;;; Exercise 1.24
;;; https://sicp.sorosliu.xyz/book/book-Z-H-11.html#%_thm_1.24

(define (square n) (* n n))

(define (even? n)
  (= (remainder n 2) 0))

(define (expmod base exp m)
  (cond ((= exp 0) 1)
	((even? exp)
	 (remainder (square (expmod base (/ exp 2) m))
		    m))
	(else
	  (remainder (* base (expmod base (- exp 1) m))
		     m))))

(define (fermat-test n)
  (define (try-it a)
    (= (expmod a n n) a))
  (try-it (+ 1 (random (- n 1)))))

(define (fast-prime? n times)
  (cond ((= times 0) true)
	((fermat-test n) (fast-prime? n (- times 1)))
	(else false)))

(define (timed-prime-test n)
  (newline)
  (display n)
  (start-prime-test n (runtime)))

(define (start-prime-test n start-time)
  (if (fast-prime? n 10)
      (report-prime (- (runtime) start-time))
      #f))

(define (report-prime elapsed-time)
  (display " *** ")
  (display elapsed-time)
  #t)

(timed-prime-test 824633720831)
; 824633720831 *** .6799999999999997
;Value: #t

(define (timed-prime-test-short n)
  (start-prime-test n (runtime)))

(define (print-prime-and-search-next n c)
  (display " find: ")
  (display n)
  (newline)
  (search-for-primes (+ n 2) (- c 1)))

(define (search-for-primes n c)
  (cond ((= 0 c) (display " Done "))
	((timed-prime-test-short n) (print-prime-and-search-next n c))
	(else (search-for-primes (+ n 2) c))))

(search-for-primes (+ 1 #e1e100) 3)
;  *** 9.999999999990905e-3 find: 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000267
;  *** 1.0000000000005116e-2 find: 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000949
;  *** 1.0000000000005116e-2 find: 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001243
;  Done 
;Unspecified return value

(search-for-primes (+ 1 #e1e200) 3)
;  *** 3.0000000000001137e-2 find: 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000357
;  *** 2.9999999999986926e-2 find: 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000627
;  *** 3.0000000000001137e-2 find: 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000799
;  Done 
;Unspecified return value

(search-for-primes (+ 1 #e1e400) 3)
;  *** .12999999999999545 find: 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000069
;  *** .12999999999999545 find: 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001449
;  *** .12999999999999545 find: 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001987
;  Done 
;Unspecified return value

(search-for-primes (+ 1 #e1e800) 3)
;  *** .7400000000000091 find
;  *** .7300000000000182 find
;  *** .7299999999999613 find: 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007561
;  Done 
;Unspecified return value

; expect TWICE the time to test prime near 1,000,000 as the time to test prime near 1000
; ACTUAL ratio: 3, 4.33, 5.6
; MAYBE because remainder operation take MORE compuation power if its operand grows
; that is to say remainder operation DOES NOT take constant time